{"version":3,"sources":["logo.svg","components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","key","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","fetch","then","response","json","users","setState","this","filterMonster","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+SAAe,I,wBCIFA,EAAO,SAACC,GAEpB,OACC,sBAAKC,UAAU,iBAAf,UACC,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,6BACEL,EAAMI,QAAQE,MADPN,EAAMO,KAGf,4BACEP,EAAMI,QAAQI,YCRNC,EAAW,SAACT,GACxB,OACC,qBAAKC,UAAU,YAAf,SACED,EAAMU,SAASC,KAAI,SAACP,GAAD,OACnB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCJVO,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACxB,uBACCb,UAAU,SACVc,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCmCGG,E,kDApCb,aAAe,IAAD,8BACZ,gBAGKC,MAAQ,CACXR,SAAU,GACVS,YAAa,IANH,E,qDAWd,WAAqB,IAAD,OAClBC,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAAEf,SAAUc,S,oBAI7C,WAAU,IAAD,OACP,EAAkCE,KAAKR,MAA/BR,EAAR,EAAQA,SAAUS,EAAlB,EAAkBA,YACZQ,EAAgBjB,EAASkB,QAAO,SAAAxB,GAAO,OAC3CA,EAAQE,KAAKuB,cAAcC,SAASX,EAAYU,kBAElD,OACE,sBAAK5B,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,CACEY,YAAY,kBACZC,aAAc,SAAAiB,GAAO,EAAKN,SAAS,CAAEN,YAAaY,EAAEC,OAAOC,WAE7D,cAAC,EAAD,CAAUvB,SAAUiB,W,GA/BVO,aCIHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.98a286ea.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\r\n\r\nimport \"./card.style.css\"\r\n\r\nexport const Card = (props) => {\r\n\r\n\treturn (\r\n\t\t<div className=\"card-container\">\r\n\t\t\t<img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} />\r\n\t\t\t<h2 key={props.key}>\r\n\t\t\t\t{props.monster.name}\r\n\t\t\t</h2>\r\n\t\t\t<p>\r\n\t\t\t\t{props.monster.email}\r\n\t\t\t</p>\r\n\t\t</div>\r\n\t)\r\n\r\n}","import React from 'react'\r\nimport \"./card-list.style.css\"\r\n\r\nimport { Card } from '../card/card.component'\r\n\r\nexport const CardList = (props) => {\r\n\treturn (\r\n\t\t<div className=\"card-list\">\r\n\t\t\t{props.monsters.map((monster) => (\r\n\t\t\t\t<Card key={monster.id} monster={monster} />\r\n\t\t\t))}\r\n\t\t</div>\r\n\t)\r\n}","import React from 'react'\r\n\r\nimport \"./search-box.style.css\"\r\n\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => (\r\n\t<input\r\n\t\tclassName=\"search\"\r\n\t\ttype='search'\r\n\t\tplaceholder={placeholder}\r\n\t\tonChange={handleChange} />\r\n);\r\n\r\n\r\n","import logo from './logo.svg';\nimport './App.css';\nimport React, { Component } from 'react'\n\n// Mis componentes\nimport { CardList } from \"./components/card-list/card-list.component\"\nimport { SearchBox } from \"./components/search-box/search-box.component\"\n\nclass App extends Component {\n  constructor() {\n    super();\n\n\n    this.state = {\n      monsters: [],\n      searchField: ''\n    };\n  }\n\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then(response => response.json())\n      .then(users => this.setState({ monsters: users }))\n  }\n\n\n  render() {\n    const { monsters, searchField } = this.state;\n    const filterMonster = monsters.filter(monster =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase()))\n\n    return (\n      <div className=\"App\">\n        <h1>Monster Rolodex</h1>\n        <SearchBox\n          placeholder=\"Busca monstruos\"\n          handleChange={e => { this.setState({ searchField: e.target.value }) }}\n        />\n        <CardList monsters={filterMonster} />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}